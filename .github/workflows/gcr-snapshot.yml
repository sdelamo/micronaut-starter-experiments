name: Snapshot to GCR
on:
  push:
    branches:
      - 4.7.x
jobs:
  deploy:
    permissions:
      contents: 'read'
      id-token: 'write'
    name: Deploy job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '21'
      - id: 'auth'
        name: 'Authenticate to Google Cloud' # https://github.com/google-github-actions/auth
        uses: 'google-github-actions/auth@v2.1.7'
        with:
          create_credentials_file: true
          workload_identity_provider: ${{ secrets.GCLOUD_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCLOUD_SERVICE_ACCOUNT_EMAIL }}
#      - name: Run Tests
#        run: ./gradlew starter-api:test starter-web-netty:test starter-gcp-function:shadowJar
#        env:
#          PREDICTIVE_TEST_SELECTION: "${{ github.event_name == 'pull_request' && 'true' || 'false' }}"
      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2.1.2"
      - name: "Use gcloud CLI"
        run: "gcloud info"
      - name: "Docker auth"
        run: |-
          gcloud auth configure-docker us-central1-docker.pkg.dev --quiet
      - name: Build Docker image
        run: |
          ./gradlew starter-web-netty:dockerBuild
      - name: Push image to Google Cloud Artifact Registry
        run: |
          docker tag micronaut-starter us-central1-docker.pkg.dev/micronaut-guides/micronaut-starter:snapshot
          docker push us-central1-docker.pkg.dev/micronaut-guides/micronaut-starter
#      - name: Deploy to Cloud Run
#        run: |
#          gcloud run deploy ${{ secrets.GCLOUD_SNAPSHOT_APP_NAME }} --quiet --image ${{ secrets.GCLOUD_ARTIFACT_REPOSITORY}}:snapshot --project ${{ secrets.GCLOUD_PROJECT }} --region  ${{ secrets.GCLOUD_REGION }} --update-env-vars=HOSTNAME="snapshot.micronaut.io",GITHUB_OAUTH_APP_CLIENT_ID=${{ secrets.GH_OAUTH_SNAPSHOT_CLIENT_ID }},GITHUB_OAUTH_APP_CLIENT_SECRET=${{ secrets.GH_OAUTH_SNAPSHOT_CLIENT_SECRET }} --platform managed --allow-unauthenticated --service-account=${{ secrets.GCLOUD_SERVICE_ACCOUNT_EMAIL }}
